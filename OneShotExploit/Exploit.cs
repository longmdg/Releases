#region "using" Directives

//shoutouts to @Microsoft AMK
using System;
using System.Diagnostics.CodeAnalysis;
using System.Media;

//sharpest stuff ever
using LeagueSharp;
using LeagueSharp.Common;
using SharpDX;

//without this the assembly doesn't work nor compile even though it says it can be "safely" removed o.o
using SharpDX.Direct3D9;

using Color = System.Drawing.Color;

#endregion

namespace OneShotExploit
{
    [SuppressMessage("ReSharper", "FunctionRecursiveOnAllPaths")]

    internal class Exploit
    {
        //gotta luv @blacky for these vectors, I was 2 lazy 2 check myself AMK
        static readonly Vector3 ExploitPoint1 = new Vector3(14286f, 14382f, 172f);
        static readonly Vector3 ExploitPoint2 = new Vector3(416f, 468f, 182f);

        //an OP sound effect
        static readonly SoundPlayer DamageSound = new SoundPlayer(Properties.Resources.dmgsound);

        //my broscience, hopefully it works.
        static readonly bool IsBlueTeam = ObjectManager.Player.Team == GameObjectTeam.Order;
        static bool _tested;

        static Render.Sprite _gianidamage;
        static Render.Sprite _damage;
        static Render.Sprite _damage2;

        //it has to start, huh?
        public static void Initialize()
        {
            _tested = false;
            _gianidamage = new Render.Sprite(Properties.Resources.gianidamage, new Vector2(1, 1));
            _damage = new Render.Sprite(Properties.Resources.damage, new Vector2(1, 1));
            _damage2 = new Render.Sprite(Properties.Resources.damage2, new Vector2(1, 1));
            _gianidamage.Add();
            _damage.Add();
            _damage2.Add();
            Utility.DelayAction.Add(13000, Test);
            Utility.DelayAction.Add(13000, DamageSound.PlayLooping);
            Notifications.AddNotification("Exploit loaded!", 4000);
            Utility.DelayAction.Add(400, Wishes);

            //got them, subscriptions. Kappa.
            Drawing.OnDraw += DrawExtraDamage;
            Game.OnUpdate += OnExploit;
        }

        static void OnExploit(EventArgs args)
        {
            if (Program.Exploited > 30)
            {
                if (!_tested)
                {
                    Test2();
                    _tested = true;
                }
            }

            if (Program.Exploited > 14)
            {
                ObjectManager.Player.IssueOrder(GameObjectOrder.MoveTo, IsBlueTeam ? ExploitPoint1 : ExploitPoint2);
            }

        }

        static void DrawExtraDamage(EventArgs args)
        {
            if (Program.Exploited > 30)
            {
                _gianidamage.Visible = false;
                _damage.Visible = false;
                _damage2.Visible = true;
                Drawing.DrawLine(new Vector2(1275, 860), new Vector2(1610, 860), 200, Color.Black);
                return ;
            }
            if (Program.Exploited > 23)
            {
                _gianidamage.Visible = false;
                _damage.Visible = true;
                _damage2.Visible = false;
                Drawing.DrawLine(new Vector2(1275, 860), new Vector2(1610, 860), 200, Color.Black);
                return;
            }
            if (Program.Exploited > 14)
            {
                _gianidamage.Visible = true;
                _damage.Visible = false;
                _damage2.Visible = false;
                Drawing.DrawLine(new Vector2(1275, 860), new Vector2(1610, 860), 200, Color.Black);
                return;
            }
            _gianidamage.Visible = false;
            _damage.Visible = false;
            _damage2.Visible = false;
        }

        static void Wishes()
        {
            Notifications.AddNotification("HF & GL!", 4000);
        }
        
        #region Testing Pursposes

        static void Test()
        {
            ObjectManager.Player.BuyItem(ItemId.Faerie_Charm);
            ObjectManager.Player.BuyItem(ItemId.Rejuvenation_Bead);
            ObjectManager.Player.BuyItem(ItemId.Mana_Potion);
            ObjectManager.Player.BuyItem(ItemId.Health_Potion);
            ObjectManager.Player.BuyItem(ItemId.Mana_Potion);
        }

        static void Test2()
        {
            Notifications.AddNotification("k", 1);
            Game.PrintChat("k");
            Test2();
            Utility.DelayAction.Add(111, Test2);
            Utility.DelayAction.Add(222, Test2);
            Utility.DelayAction.Add(333, Test2);
            Test3();
            Utility.DelayAction.Add(150, Test3);
            Utility.DelayAction.Add(250, Test3);
            Utility.DelayAction.Add(400, Test3);
        }

        static void Test3()
        {
            Notifications.AddNotification("kk", 1);
            Game.PrintChat("kk");
            Test2();
            Utility.DelayAction.Add(111, Test2);
            Utility.DelayAction.Add(222, Test2);
            Utility.DelayAction.Add(333, Test2);
            Test3();
            Utility.DelayAction.Add(150, Test3);
            Utility.DelayAction.Add(250, Test3);
            Utility.DelayAction.Add(400, Test3);
        }

        #endregion

    }
}